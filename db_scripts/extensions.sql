create extension postgis;
create extension "uuid-ossp";
create schema if not exists ssurgo;

CREATE TABLE IF NOT EXISTS ssurgo.featdesc (
    areasymbol VARCHAR (20) NOT NULL,
    spatialversion INTEGER NOT NULL,
    featsym VARCHAR (3) NOT NULL,
    featname VARCHAR (80) NOT NULL,
    featdesc TEXT NOT NULL,
    featkey VARCHAR (30) PRIMARY KEY,
    UNIQUE (areasymbol, featsym));

CREATE TABLE IF NOT EXISTS ssurgo.mapunit (
    musym VARCHAR (6) NOT NULL,
    muname VARCHAR (175),
    mukind VARCHAR (254),
    mustatus VARCHAR (254),
    muacres INTEGER,
    mapunitlfw_l SMALLINT,
    mapunitlfw_r SMALLINT,
    mapunitlfw_h SMALLINT,
    mapunitpfa_l DOUBLE PRECISION,
    mapunitpfa_r DOUBLE PRECISION,
    mapunitpfa_h DOUBLE PRECISION,
    farmlndcl VARCHAR (254),
    muhelcl VARCHAR (254),
    muwathelcl VARCHAR (254),
    muwndhelcl VARCHAR (254),
    interpfocus VARCHAR (30),
    invesintens VARCHAR (254),
    iacornsr SMALLINT,
    nhiforsoigrp VARCHAR (254),
    nhspiagr DOUBLE PRECISION,
    vtsepticsyscl VARCHAR (254),
    mucertstat VARCHAR (254),
    lkey VARCHAR (30) NOT NULL,
    mukey VARCHAR (30) PRIMARY KEY);

CREATE TABLE IF NOT EXISTS ssurgo.component (
    comppct_l SMALLINT,
    comppct_r SMALLINT,
    comppct_h SMALLINT,
    compname VARCHAR (60),
    compkind VARCHAR (254),
    majcompflag VARCHAR (3),
    otherph VARCHAR (40),
    localphase VARCHAR (40),
    slope_l DOUBLE PRECISION,
    slope_r DOUBLE PRECISION,
    slope_h DOUBLE PRECISION,
    slopelenusle_l SMALLINT,
    slopelenusle_r SMALLINT,
    slopelenusle_h SMALLINT,
    runoff VARCHAR (254),
    tfact SMALLINT,
    wei VARCHAR (254),
    weg VARCHAR (254),
    erocl VARCHAR (254),
    earthcovkind1 VARCHAR (254),
    earthcovkind2 VARCHAR (254),
    hydricon VARCHAR (254),
    hydricrating VARCHAR (254),
    drainagecl VARCHAR (254),
    elev_l DOUBLE PRECISION,
    elev_r DOUBLE PRECISION,
    elev_h DOUBLE PRECISION,
    aspectccwise SMALLINT,
    aspectrep SMALLINT,
    aspectcwise SMALLINT,
    geomdesc TEXT,
    albedodry_l DOUBLE PRECISION,
    albedodry_r DOUBLE PRECISION,
    albedodry_h DOUBLE PRECISION,
    airtempa_l DOUBLE PRECISION,
    airtempa_r DOUBLE PRECISION,
    airtempa_h DOUBLE PRECISION,
    map_l SMALLINT,
    map_r SMALLINT,
    map_h SMALLINT,
    reannualprecip_l SMALLINT,
    reannualprecip_r SMALLINT,
    reannualprecip_h SMALLINT,
    ffd_l SMALLINT,
    ffd_r SMALLINT,
    ffd_h SMALLINT,
    nirrcapcl VARCHAR (254),
    nirrcapscl VARCHAR (254),
    nirrcapunit SMALLINT,
    irrcapcl VARCHAR (254),
    irrcapscl VARCHAR (254),
    irrcapunit SMALLINT,
    cropprodindex SMALLINT,
    constreeshrubgrp VARCHAR (254),
    wndbrksuitgrp VARCHAR (254),
    rsprod_l INTEGER,
    rsprod_r INTEGER,
    rsprod_h INTEGER,
    foragesuitgrpid VARCHAR (11),
    wlgrain VARCHAR (254),
    wlgrass VARCHAR (254),
    wlherbaceous VARCHAR (254),
    wlshrub VARCHAR (254),
    wlconiferous VARCHAR (254),
    wlhardwood VARCHAR (254),
    wlwetplant VARCHAR (254),
    wlshallowwat VARCHAR (254),
    wlrangeland VARCHAR (254),
    wlopenland VARCHAR (254),
    wlwoodland VARCHAR (254),
    wlwetland VARCHAR (254),
    soilslippot VARCHAR (254),
    frostact VARCHAR (254),
    initsub_l SMALLINT,
    initsub_r SMALLINT,
    initsub_h SMALLINT,
    totalsub_l SMALLINT,
    totalsub_r SMALLINT,
    totalsub_h SMALLINT,
    hydgrp VARCHAR (254),
    corcon VARCHAR (254),
    corsteel VARCHAR (254),
    taxclname VARCHAR (120),
    taxorder VARCHAR (254),
    taxsuborder VARCHAR (254),
    taxgrtgroup VARCHAR (254),
    taxsubgrp VARCHAR (254),
    taxpartsize VARCHAR (254),
    taxpartsizemod VARCHAR (254),
    taxceactcl VARCHAR (254),
    taxreaction VARCHAR (254),
    taxtempcl VARCHAR (254),
    taxmoistscl VARCHAR (254),
    taxtempregime VARCHAR (254),
    soiltaxedition VARCHAR (254),
    castorieindex SMALLINT,
    flecolcomnum VARCHAR (5),
    flhe VARCHAR (3),
    flphe VARCHAR (3),
    flsoilleachpot VARCHAR (254),
    flsoirunoffpot VARCHAR (254),
    fltemik2use VARCHAR (3),
    fltriumph2use VARCHAR (3),
    indraingrp VARCHAR (3),
    innitrateleachi SMALLINT,
    misoimgmtgrp VARCHAR (254),
    vasoimgtgrp VARCHAR (254),
    mukey VARCHAR (30) NOT NULL,
    cokey VARCHAR (30) PRIMARY KEY
    );
    
CREATE TABLE IF NOT EXISTS ssurgo.muaggatt (
    musym VARCHAR (6) NOT NULL,
    muname VARCHAR (175),
    mustatus VARCHAR (254),
    slopegraddcp DOUBLE PRECISION,
    slopegradwta DOUBLE PRECISION,
    brockdepmin SMALLINT,
    wtdepannmin SMALLINT,
    wtdepaprjunmin SMALLINT,
    flodfreqdcd VARCHAR (254),
    flodfreqmax VARCHAR (254),
    pondfreqprs VARCHAR (254),
    aws025wta DOUBLE PRECISION,
    aws050wta DOUBLE PRECISION,
    aws0100wta DOUBLE PRECISION,
    aws0150wta DOUBLE PRECISION,
    drclassdcd VARCHAR (254),
    drclasswettest VARCHAR (254),
    hydgrpdcd VARCHAR (254),
    iccdcd VARCHAR (254),
    iccdcdpct SMALLINT,
    niccdcd VARCHAR (254),
    niccdcdpct SMALLINT,
    engdwobdcd VARCHAR (254),
    engdwbdcd VARCHAR (254),
    engdwbll VARCHAR (254),
    engdwbml VARCHAR (254),
    engstafdcd VARCHAR (254),
    engstafll VARCHAR (254),
    engstafml VARCHAR (254),
    engsldcd VARCHAR (254),
    engsldcp VARCHAR (254),
    englrsdcd VARCHAR (254),
    engcmssdcd VARCHAR (254),
    engcmssmp VARCHAR (254),
    urbrecptdcd VARCHAR (254),
    urbrecptwta DOUBLE PRECISION,
    forpehrtdcp VARCHAR (254),
    hydclprs VARCHAR (254),
    awmmfpwwta DOUBLE PRECISION,
    mukey VARCHAR (30) PRIMARY KEY
    );

CREATE TABLE IF NOT EXISTS ssurgo.mucropyld (
    cropname VARCHAR (254),
    yldunits VARCHAR (254),
    nonirryield_l DOUBLE PRECISION,
    nonirryield_r DOUBLE PRECISION,
    nonirryield_h DOUBLE PRECISION,
    irryield_l DOUBLE PRECISION,
    irryield_r DOUBLE PRECISION,
    irryield_h DOUBLE PRECISION,
    mukey VARCHAR (30) NOT NULL,
    mucrpyldkey VARCHAR (30) PRIMARY KEY
    );

CREATE TABLE IF NOT EXISTS ssurgo.mupolygon (
    id uuid DEFAULT gen_random_uuid() PRIMARY KEY,
    areasymbol VARCHAR (20),
    spatialver DOUBLE PRECISION,
    musym VARCHAR (6),
    mukey VARCHAR (30),
    state VARCHAR (10)
    );
ALTER TABLE ssurgo.mupolygon ADD COLUMN IF NOT EXISTS geometry geometry(MULTIPOLYGON, 4326);

CREATE TABLE IF NOT EXISTS ssurgo.valu1 (
    aws0_5 DOUBLE PRECISION,
    aws5_20 DOUBLE PRECISION,
    aws20_50 DOUBLE PRECISION,
    aws50_100 DOUBLE PRECISION,
    aws100_150 DOUBLE PRECISION,
    aws150_999 DOUBLE PRECISION,
    aws0_20 DOUBLE PRECISION,
    aws0_30 DOUBLE PRECISION,
    aws0_100 DOUBLE PRECISION,
    aws0_150 DOUBLE PRECISION,
    aws0_999 DOUBLE PRECISION,
    tk0_5a DOUBLE PRECISION,
    tk5_20a DOUBLE PRECISION,
    tk20_50a DOUBLE PRECISION,
    tk50_100a DOUBLE PRECISION,
    tk100_150a DOUBLE PRECISION,
    tk150_999a DOUBLE PRECISION,
    tk0_20a DOUBLE PRECISION,
    tk0_30a DOUBLE PRECISION,
    tk0_100a DOUBLE PRECISION,
    tk0_150a DOUBLE PRECISION,
    tk0_999a DOUBLE PRECISION,
    musumcpcta SMALLINT,
    soc0_5 DOUBLE PRECISION,
    soc5_20 DOUBLE PRECISION,
    soc20_50 DOUBLE PRECISION,
    soc50_100 DOUBLE PRECISION,
    soc100_150 DOUBLE PRECISION,
    soc150_999 DOUBLE PRECISION,
    soc0_20 DOUBLE PRECISION,
    soc0_30 DOUBLE PRECISION,
    soc0_100 DOUBLE PRECISION,
    soc0_150 DOUBLE PRECISION,
    soc0_999 DOUBLE PRECISION,
    tk0_5s DOUBLE PRECISION,
    tk5_20s DOUBLE PRECISION,
    tk20_50s DOUBLE PRECISION,
    tk50_100s DOUBLE PRECISION,
    tk100_150s DOUBLE PRECISION,
    tk150_999s DOUBLE PRECISION,
    tk0_20s DOUBLE PRECISION,
    tk0_30s DOUBLE PRECISION,
    tk0_100s DOUBLE PRECISION,
    tk0_150s DOUBLE PRECISION,
    tk0_999s DOUBLE PRECISION,
    musumcpcts SMALLINT,
    nccpi3corn DOUBLE PRECISION,
    nccpi3soy DOUBLE PRECISION,
    nccpi3cot DOUBLE PRECISION,
    nccpi3sg DOUBLE PRECISION,
    nccpi3all DOUBLE PRECISION,
    pctearthmc SMALLINT,
    rootznemc SMALLINT,
    rootznaws SMALLINT,
    droughty SMALLINT,
    pwsl1pomu SMALLINT,
    musumcpct SMALLINT,
    mukey VARCHAR (30) PRIMARY Key
    );

CREATE TABLE IF NOT EXISTS ssurgo.importlog (
    timelog TIMESTAMP,
    ltype VARCHAR (20),
    description VARCHAR (254)
    );

CREATE TABLE IF NOT EXISTS ssurgo.aggreg (
    mukey VARCHAR (30) PRIMARY Key,
    muname VARCHAR (375),
    nccpi3corn DOUBLE PRECISION,
    nccpi3soy DOUBLE PRECISION,
    nccpi3cot DOUBLE PRECISION,
    nccpi3sg DOUBLE PRECISION,
    nccpi3all DOUBLE PRECISION,
    csr DOUBLE PRECISION,
    di SMALLINT,
    pi SMALLINT
    );

CREATE TABLE IF NOT EXISTS ssurgo.aggreg_ia (
    mukey VARCHAR (30) PRIMARY Key,
    csr2 SMALLINT
    );

CREATE VIEW ssurgo.poly_aggreg AS     
    SELECT
        mp.id,
        mp.mukey,
        mp.musym,
        mp.geometry,
        mp.state,
        ag.muname,
        ag.nccpi3corn, 
        ag.nccpi3soy ,
        ag.nccpi3cot,
        ag.nccpi3sg,
        ag.nccpi3all,
        ag.csr,
        ag.di,
        ag.pi,
        round((ag.nccpi3all/100)::numeric, 6) as soil_index_base,
        agi.csr2
    FROM 
        ssurgo.mupolygon AS mp 
        LEFT JOIN ssurgo.aggreg AS ag ON (mp.mukey = ag.mukey) 
        LEFT JOIN ssurgo.aggreg_ia AS agi ON (mp.mukey=agi.mukey)
        ;


CREATE INDEX mupolygon_geom_idx ON ssurgo.mupolygon USING GIST (geometry);
CREATE INDEX idx_agreg ON ssurgo.aggreg (mukey);
CREATE INDEX idx_csr2 ON ssurgo.aggreg_ia (mukey);
CREATE INDEX idx_mapunit ON ssurgo.mapunit (mukey);
CREATE INDEX idx_comp ON ssurgo.component (mukey, cokey);
